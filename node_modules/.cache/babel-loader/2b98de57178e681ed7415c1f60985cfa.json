{"ast":null,"code":"var _jsxFileName = \"/Users/kecao/Desktop/task/react-ts-tree/src/pages/TreeExample.tsx\";\nimport * as React from 'react'; // import { useEffect } from \"react\";\n\nimport Tree from '../components/tree/Tree';\nconst sourceData = [{\n  text: '菜单1',\n  value: '1',\n  children: [{\n    text: '菜单1.1',\n    value: '1.1',\n    children: [{\n      text: '菜单1.1.1',\n      value: '1.1.1',\n      children: [{\n        text: '菜单1.1.1.1',\n        value: '1.1.1.1',\n        children: [{\n          text: '菜单1.1.1.1.1',\n          value: '1.1.1.1.1'\n        }, {\n          text: '菜单1.1.1.1.2',\n          value: '1.1.1.1.2',\n          children: [{\n            text: '菜单1.1.1.1.1.1',\n            value: '1.1.1.1.1.1'\n          }]\n        }]\n      }]\n    }, {\n      text: '菜单1.1.2',\n      value: '1.1.2'\n    }]\n  }, {\n    text: '菜单1.2',\n    value: '1.2'\n  }]\n}, {\n  text: '菜单2',\n  value: '2',\n  children: [{\n    text: '菜单2.1',\n    value: '2.1'\n  }, {\n    text: '菜单2.2',\n    value: '2.2'\n  }]\n}];\n\nfor (let i = 3; i <= 2000; i++) {\n  sourceData.push({\n    text: `菜单${i}`,\n    value: `${i}`,\n    children: [{\n      text: `菜单${i}.1`,\n      value: `${i}.1`,\n      children: [{\n        text: `菜单${i}.1.1`,\n        value: `${i}.1.1`\n      }, {\n        text: `菜单${i}.1.2`,\n        value: `${i}.1.2`\n      }]\n    }]\n  });\n}\n\nconst TreeExample = () => {\n  // const [selectValues, setSelectValues] = useState<string[]>(['']);\n  // const onChange = (values: string[]) => {\n  //   setSelectValues(values);\n  // };\n  // 相当于 componentDidMount 和 componentDidUpdate:\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Tree, {\n    sourceData: sourceData,\n    height: 26,\n    lazy: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default TreeExample;","map":{"version":3,"sources":["/Users/kecao/Desktop/task/react-ts-tree/src/pages/TreeExample.tsx"],"names":["React","Tree","sourceData","text","value","children","i","push","TreeExample"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,yBAAjB;AAGA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,IAAI,EAAE,KADR;AACcC,EAAAA,KAAK,EAAE,GADrB;AAEEC,EAAAA,QAAQ,EAAE,CACN;AACEF,IAAAA,IAAI,EAAE,OADR;AACiBC,IAAAA,KAAK,EAAE,KADxB;AAEEC,IAAAA,QAAQ,EAAE,CACN;AACEF,MAAAA,IAAI,EAAE,SADR;AACmBC,MAAAA,KAAK,EAAE,OAD1B;AAEEC,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,IAAI,EAAE,WADR;AACqBC,QAAAA,KAAK,EAAE,SAD5B;AAEEC,QAAAA,QAAQ,EAAE,CACR;AAACF,UAAAA,IAAI,EAAE,aAAP;AAAsBC,UAAAA,KAAK,EAAE;AAA7B,SADQ,EAER;AACED,UAAAA,IAAI,EAAE,aADR;AACuBC,UAAAA,KAAK,EAAE,WAD9B;AAEEC,UAAAA,QAAQ,EAAE,CACR;AAACF,YAAAA,IAAI,EAAE,eAAP;AAAwBC,YAAAA,KAAK,EAAE;AAA/B,WADQ;AAFZ,SAFQ;AAFZ,OADQ;AAFZ,KADM,EAkBN;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAlBM;AAFZ,GADM,EAwBN;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAxBM;AAFZ,CADiB,EA8BjB;AACED,EAAAA,IAAI,EAAE,KADR;AACcC,EAAAA,KAAK,EAAE,GADrB;AAEEC,EAAAA,QAAQ,EAAE,CACR;AAACF,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADQ,EAER;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFQ;AAFZ,CA9BiB,CAAnB;;AAuCA,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAE,IAAhB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBJ,EAAAA,UAAU,CAACK,IAAX,CAAgB;AACdJ,IAAAA,IAAI,EAAI,KAAIG,CAAE,EADA;AAEdF,IAAAA,KAAK,EAAG,GAAEE,CAAE,EAFE;AAGdD,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,IAAI,EAAG,KAAIG,CAAE,IADf;AAEEF,MAAAA,KAAK,EAAG,GAAEE,CAAE,IAFd;AAGED,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,IAAI,EAAG,KAAIG,CAAE,MADf;AAEEF,QAAAA,KAAK,EAAG,GAAEE,CAAE;AAFd,OADQ,EAKR;AACEH,QAAAA,IAAI,EAAG,KAAIG,CAAE,MADf;AAEEF,QAAAA,KAAK,EAAG,GAAEE,CAAE;AAFd,OALQ;AAHZ,KADQ;AAHI,GAAhB;AAmBD;;AAED,MAAME,WAAqB,GAAG,MAAM;AACpC;AACA;AACA;AACA;AAEA;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEN,UAAlB;AAA8B,IAAA,MAAM,EAAE,EAAtC;AAA0C,IAAA,IAAI,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKC,CAbD;;AAeA,eAAeM,WAAf","sourcesContent":["import * as React from 'react';\n// import { useEffect } from \"react\";\n\nimport Tree from '../components/tree/Tree';\n\n\nconst sourceData = [\n  {\n    text: '菜单1',value: '1',\n    children: [\n        {\n          text: '菜单1.1', value: '1.1',\n          children: [\n              {\n                text: '菜单1.1.1', value: '1.1.1' , \n                children: [\n                  {\n                    text: '菜单1.1.1.1', value: '1.1.1.1', \n                    children: [\n                      {text: '菜单1.1.1.1.1', value: '1.1.1.1.1'},\n                      {\n                        text: '菜单1.1.1.1.2', value: '1.1.1.1.2',\n                        children: [\n                          {text: '菜单1.1.1.1.1.1', value: '1.1.1.1.1.1',}\n                        ]\n                      },\n                    ]\n                  }\n                ]\n              },\n              { text: '菜单1.1.2', value: '1.1.2' }\n          ]\n        },\n        {text: '菜单1.2', value: '1.2'},\n    ]\n  },\n  {\n    text: '菜单2',value: '2',\n    children: [\n      {text: '菜单2.1', value: '2.1'},\n      {text: '菜单2.2', value: '2.2'}\n    ]\n  }\n];\n\nfor(let i=3; i<=2000; i++) {\n  sourceData.push({\n    text:  `菜单${i}`,\n    value: `${i}`,\n    children: [\n      {\n        text: `菜单${i}.1`,\n        value: `${i}.1`,\n        children: [\n          {\n            text: `菜单${i}.1.1`,\n            value: `${i}.1.1`\n          },\n          {\n            text: `菜单${i}.1.2`,\n            value: `${i}.1.2`\n          }\n        ]\n      }\n    ]});\n}\n\nconst TreeExample: React.FC = () => {\n// const [selectValues, setSelectValues] = useState<string[]>(['']);\n// const onChange = (values: string[]) => {\n//   setSelectValues(values);\n// };\n\n// 相当于 componentDidMount 和 componentDidUpdate:\n\nreturn (\n  <div >\n    <Tree sourceData={sourceData} height={26} lazy={false}/>\n  </div>\n );\n};\n\nexport default TreeExample;"]},"metadata":{},"sourceType":"module"}